# -*- coding:utf-8 -*-

import json
import requests
import os

#cli_wallet_url = "http://0.0.0.0:8048"
cli_wallet_url = "http://0.0.0.0:8047"
headers = {"content-type": "application/json"}
creater_asset_name = 'nicotest'
newfile = "assets_history.txt"

market_assets = [
'DIESEL',
'KRW',
'BTC',
'OIL',
'SILVER',
'GOLD',
'TRY',
'SGD',
'HKD',
'RUB',
'SEK',
'NZD',
'CNY',
'MXN',
'CAD',
'CHF',
'AUD',
'GBP',
'JPY',
'EUR',
'USD',
'CROWDFUN',
'DRAGON',
'SERVICE',
'BTCSHA',
'TESTME',
'BANCOR',
'NASDAQC',
'HANGSENG',
'NIKKEI',
'SHENZHEN',
'SHANGHAI'
]

user_assets = [
'LAB',
'IFTN',
'LOVE',
'NOK',
'FREE',
'STAR',
'PAN',
'LTB',
'HLP',
'VND',
'VTC',
'AIR',
'GEM',
'POOL',
'ROSE',
'BST',
'FUND',
'JOY',
'YUN',
'NENMOBI',
'KOREAN',
'TICKET',
'OPENFUND',
'GOOGLE',
'CONCERT',
'FESTIVAL',
'BTBASSET',
'PEGCNY',
'PEGBTC',
'PEGUSD',
'PEGEUR',
'YUNCNY',
'YUNUSD',
'YUNBTC',
'YUNEUR',
'PAYALT',
'BIMINCN',
'BIMINCOM',
'TAOBAO',
'XIAOMI',
'KUANGJI',
'NIKOLAI',
'MICHIGAN',
'COINBASE',
'VIRGIN',
'ALIBABA',
'AMAZON',
'FACEBOOK',
'TENCENT',
'CAOLIU',
'YOUXIBI',
'YULEBI',
'RIPPLE',
'DACLOCK',
'ETHEREUM',
'BTSPLAY',
'ALIPAY',
'LENOVO',
'OKCOIN',
'ZHIFUBAO',
'WEIZHONG',
'LARIMER',
'PAYARCH',
'PAYPAL',
'BTSGPS',
'SILENCE',
'DANBAO',
'DISNEY',
'VCFUND',
'PEFUND',
'COINFUND',
'DACFUND',
'BANK',
'GALAXY',
'BTSSHARE',
'RENMINBI',
'BIFUBAO',
'WEIZHIFU',
'XFUCUN',
'BTSPAY',
'HIREME',
'CHINESE',
'SUANMING',
'ZHOUYI',
'EDUCOIN',
'ANDROID',
'CREDIT',
'STELLAR',
'LOTTERY',
'COMIXC',
'GIFTCNY',
'BTSHOME',
'WWWBTSHK',
'GITHUB',
'APPSTORE',
'PLAYBOY',
'CNYEAR',
'IFTHEN',
'CASINO',
'MESSAGE',
'FUTURE',
'CHANCE',
'MIDDLE',
'INSURE',
'ASSETS',
'XXXXXX',
'SUPERDAC',
'BAOBAO',
'PAOPAO',
'DOUDOU',
'CHAKRA',
'WILDPIG',
'CHAKRAS',
'REASON',
'THANKS',
'SWEETY',
'ALIHAHA',
'BTSBOTS',
'CHERRY',
'IOUBTC',
'PAYBTC',
'SMARTX',
'MARKET',
'IQCARD',
'JUNXIN',
'BTSAPP',
'BTSDAC',
'NLLSTRT',
'CYBERS',
'CSHARES',
'DELEGATE',
'ADIDAS',
'PLAYER',
'SHIDAIBI',
'BAINIAN',
'COUPON',
'REFUND',
'RETURN',
'DISCOUNT',
'REBATE',
'WALLET',
'FACELIKE',
'ALIMAMA',
'MINION',
'TENPAY',
'DIAMOND',
'STANFORD',
'EXCHANGE',
'GATEBTC',
'LUCKYGC',
'ONELIGHT',
'DOLLAR',
'THEORY',
'THEOREM',
'WATERS',
'ROUBLE',
'PTSORG',
'AGSORG',
'TALENT',
'GATEPTS',
'BTSAPAC',
'BTSAPC',
'ANTFUND',
'BOTFUND',
'BTSABC',
'GATEWAY',
'LEAGUE',
'NASDAQ',
'BTSFUND',
'TESTAAAA',
'GAMBLING',
'BETTING',
'INDEX',
'ZYGOTE',
'TOURCOIN',
'ASKIND',
'FESENKO',
'SRVFUND',
'LOVEJOY',
'BPROMO',
'KKKIILLL',
'ASDBTS',
'DAYDREAM',
'NEOSHARE',
'ONEGWAY',
'BTSIPO',
'DZLCOIN',
'TRADE',
'ROBOTS',
'BTSCNY',
'BTSUSD',
'FASTCASS',
'BURRITO',
'TEXMEX',
'ALTUSD',
'RNNBOTS',
'TCBRBOOK',
'CNFUND',
'CFSUSD',
'CFSGOLD',
'BTSXME',
'BUNKER',
'CANNABIS',
'DATASEC',
'TESTER',
'TESTER.BTC',
'TESTER.LTC',
'BSPTEST',
'CFSCOIN',
'LTCQASIC',
'GENTWO',
'CFSBTC',
'BOTSCNY',
'BOTSFUND',
'FAMILY',
'BTSBET',
'DELETIP',
'SHENTY',
'ASDQKK',
'ITDAWNS',
'GUPIAO',
'ABCFUND',
'AAAFUND',
'TRADE.LTC',
'TRADE.BTC',
'GATEKRW',
'GOOGBDR',
'AAPLBDR',
'TSLABDR',
'BIDUBDR',
'BRKABDR',
'BABABDR',
'COPPER',
'CFSUSDA',
'CLAYGATE',
'GRATIS',
'DOGECOIN',
'ENTRANCE',
'CHANGE',
'CNY.ENTRANCE',
'CNY.EXCHANGE',
'BOTSHARE',
'BTS.SHARE',
'BTSBOTS.EXCH',
'VEGAFUND',
'YYFUND',
'TESTBDR',
'TESTBDR.BDR',
'BDR',
'BDR.BABA',
'BDR.BRKA',
'BDR.AAPL',
'BDR.GOOG',
'BDR.TSLA',
'POINTS',
'CREDITS',
'BDR.SPY',
'BDR.BIDU',
'BDR.CNY',
'BDR.FB',
'BDR.USD',
'BDR.EUR',
'ACTUAL',
'AAAAAA',
'FUTURES',
'OPTION',
'TESTME.TEST',
'GECOIN',
'BOLEFUND',
'ALIYUN',
'ALTFUND',
'BOTWAVE',
'DOTYUN',
'RENZAN',
'BOTBUX',
'GUQUAN',
'BTSRMB',
'BOTUSD',
'BOTRMB',
'DOTUSD',
'DOTRMB',
'SPKOBTC',
'SPKOCNY',
'BUYSELL',
'TWEETS',
'GAMECOIN',
'PHPESO',
'ACCESS',
'DIVIDEND',
'ABCDEF',
'FFFARM',
'NEWBIE',
'MORLETF',
'SHMITS',
'EDUCATE',
'AWCOIN',
'SYCOIN',
'TESTNOTE',
'BTSKRW',
'CNSTAR',
'BTSBOTS.PLS',
'BDR.DIA',
'MOONTEST',
'TRANSWSR',
'MOONFUND',
'REWARDS',
'FLYMILES',
'BDR.EWH',
'REWARD',
'REWARD.PTS',
'UIATEST',
'UIATESTA',
'THEMERC',
'THEMERC.CORN',
'TOTOCOIN',
'UNIONS',
'BDR.SBUX',
'SATANIC',
'GIGGLS',
'WGFTEST',
'QQCOIN',
'BTCFUND',
'EXPRESS',
'SIMCOIN',
'FREEBTS',
'STOCKS',
'TINKER',
'BTSTABLE',
'BTSTABLE.COM',
'TINKER.TK',
'BTSNBA',
'CHINAJD',
'CARBON',
'SHARES',
'EASYCARD',
'BREAKOUT',
'BREAKOUT.BOT',
'BTSGAME',
'BTSGAME.CNY',
'BTSGAME.USD',
'BDR.ASHR',
'BDR.VIPS',
'LOYALTY',
'METAFUND',
'METAFEES',
'BTSYUAN',
'HACKING',
'BTSGAME.BTS',
'MINING',
'CANADA',
'BDR.TCEHY',
'BDR.CTRP',
'BDR.YY',
'NETHER',
'CREEPS',
'NEWTREE',
'BREAKOUT.FND',
'BREAKOUT.AAA',
'BREAKOUT.USD',
'BREAKOUT.VIP',
'BREAKOUT.GLD',
'BREAKOUT.SLV',
'BREAKOUT.BTS',
'CRYPTO',
'FRANKO',
'TWPCARD',
'CATCOIN',
'IOTFUND',
'WISKRIO',
'WISKER',
'WISKRS',
'WISKERS',
'COMPUTE',
'STORAGE',
'CONTRACT',
'WISKRDEV',
'WISKRFND',
'BDR.IBB',
'BTSBOTS.V1',
'BTSBOTS.S1',
'BTSBOTS.FUND',
'FOXBOT',
'FOXBIT',
'BOTBIT',
'FOXUSD',
'BDR.MSFT',
'BDR.BLK',
'BDR.TWX',
'VALDON',
'BDR.VIRT',
'BDR.QQQ',
'BDR.BRKB',
'BDR.JD',
'BDR.GPS',
'BDR.VISA',
'BTSFAIR',
'BDR.NFLX',
'FRUITS',
'BDR.QIHU',
'BDR.AMZN',
'BDR.DIS',
'BROWNIE',
'BROWNIE.PTS',
'TLCCOIN',
'DRAGONS',
'TRANFUND',
'MKRCOIN',
'BTGOLD',
'AIWCNY',
'BTSPOS',
'BTSATM',
'CHATEAUX',
'PVZERO',
'SATOPX',
'SHEKEL',
'DACPLS',
'SHIRTS',
'ORGASM'
]

user_asset_common = {"max_supply":"2100000000000000","market_fee_percent":0,"max_market_fee":0,"flags":0,"core_exchange_rate":{"base":{"amount":1,"asset_id":"1.3.4"},"quote":{"amount":1,"asset_id":"1.3.0"}},"description":"","extensions":[]} 
market_asset_common = {"issuer_permissions": 511,"flags": 0,"core_exchange_rate":{"base":{"amount":1,"asset_id":"1.3.3"},"quote":{"amount":1,"asset_id":"1.3.0"}}} 
bitasset_opts = {"new_feed_producers":[],"feed_lifetime_sec":120} 



def get_asset(_asset):
    try:
        body_relay = {
            "jsonrpc": "2.0",
            "method": "get_asset",
            "params": [_asset],
            "id":1
        }
        asset_info = json.loads(requests.post(cli_wallet_url, data = json.dumps(body_relay), headers = headers).text)
        print(asset_info)
        print("\n")
        save_account(json.dumps(asset_info))
        return asset_info
    except Exception as e:
        print(repr(e))


def create_user_asset(_asset):
    try:
        body_relay = {
            "jsonrpc": "2.0",
            "method": "create_asset",
            "params": [creater_asset_name, _asset, 8, user_asset_common, None, "true"],
            "id":1
        }
        create_user_asset_info = json.loads(requests.post(cli_wallet_url, data = json.dumps(body_relay), headers = headers).text)
        print(create_user_asset_info)
        print("\n")
        save_account(json.dumps(create_user_asset_info))
        return create_user_asset_info
    except Exception as e:
        print(repr(e))




def create_market_asset(_asset):
    try:
        body_relay = {
            "jsonrpc": "2.0",
            "method": "create_asset",
            "params": [creater_asset_name, _asset, 8, market_asset_common, bitasset_opts, "true"],
            "id":1
        }
        create_market_asset_info = json.loads(requests.post(cli_wallet_url, data = json.dumps(body_relay), headers = headers).text)
        print(create_market_asset_info)
        print("\n")
        save_account(json.dumps(create_market_asset_info))
        return create_market_asset_info
    except Exception as e:
        print(repr(e))



def create_assets():
    for _asset in user_assets:
        create_user_asset(_asset)
        get_asset(_asset)
        
    for _asset in market_assets:
        create_market_asset(_asset)
        get_asset(_asset)


def save_account(str):
    if not os.path.exists(newfile):
        f = open(newfile,'w')
        print(newfile)
        f.write(str+'\n')
        f.close()
    else:
        f = open(newfile,'a')
        f.write(str+'\n')
        f.close()
    return



create_assets()       

'''
example: 
python create_account.py 
{'id': 1, 'result': ['88d7032f1c83feac5cbbf386af17f7251a091ffefcbf599e9a4fd695b03b6c6d', {'extensions': [], 'ref_block_prefix': 2514403900, 'signatures': ['1f25814751037219d7f41d32e905dd55c8beef88d12bacb1285a6769e9313d8cb90c4d50ea6641f9f7fab23a1ca87d05a666b07174c8442f2590b87b53626b209e'], 'expiration': '2019-11-21T06:18:54', 'operations': [[8, {'issuer': '1.2.16', 'precision': 8, 'common_options': {'issuer_permissions': 15, 'description': '', 'extensions': [], 'max_supply': '2100000000000000', 'market_fee_percent': 0, 'core_exchange_rate': {'base': {'amount': 1, 'asset_id': '1.3.4'}, 'quote': {'amount': 1, 'asset_id': '1.3.0'}}, 'max_market_fee': 0, 'flags': 0}, 'symbol': 'PNSUC', 'extensions': []}]], 'ref_block_num': 5261}], 'jsonrpc': '2.0'}

{'id': 1, 'result': {'id': '1.3.22', 'symbol': 'PNSUC', 'dynamic_asset_data_id': '2.3.22', 'issuer': '1.2.16', 'options': {'issuer_permissions': 15, 'description': '', 'extensions': [], 'max_supply': '2100000000000000', 'market_fee_percent': 0, 'core_exchange_rate': {'base': {'amount': 1, 'asset_id': '1.3.22'}, 'quote': {'amount': 1, 'asset_id': '1.3.0'}}, 'max_market_fee': 0, 'flags': 0}, 'precision': 8}, 'jsonrpc': '2.0'}




'''
